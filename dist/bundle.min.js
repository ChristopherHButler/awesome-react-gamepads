!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ARG={},e.react)}(this,(function(e,t){"use strict";const n={buttons:["A","B","X","Y","LB","RB","LT","RT","Select","Start","LS","RS","DPadUp","DPadDown","DPadLeft","DPadRight","Xbox"],axes:["LeftStickX","-LeftStickY","RightStickX","-RightStickY","LeftTrigger","RightTrigger"],buttonAxes:[null,null,null,null,null,null,"LeftTrigger","RightTrigger"],buttonIndexToName:function(e){return this.buttons.length>=e?this.buttons[e]:null},axesIndexToName:function(e){return this.axes.length>=e?this.axes[e]:null},buttonAxesIndexToName:function(e){return this.axes.length>=e?this.buttonAxes[e]:null}},a=["DPadUp","DPadUp","DPadDown","DPadDown","DPadLeft","DPadRight","DPadLeft","DPadRight","B","A"];e.useGamepads=({stickThreshold:e=.75,deadZone:c=.08,onConnect:s=(()=>{}),onDisconnect:u=(()=>{}),onUpdate:i=(()=>{}),onGamepadButtonDown:r=(()=>{}),onGamepadButtonUp:o=(()=>{}),onGamepadButtonChange:d=(()=>{}),onGamepadAxesChange:l=(()=>{}),onLeftStickRight:b=(()=>{}),onLeftStickLeft:g=(()=>{}),onLeftStickUp:m=(()=>{}),onLeftStickDown:p=(()=>{}),onRightStickRight:f=(()=>{}),onRightStickLeft:h=(()=>{}),onRightStickUp:x=(()=>{}),onRightStickDown:v=(()=>{}),onKonamiSuccess:S=(()=>{})}={})=>{const k={connected:!1,id:"",index:0,mapping:"",vibrationActuator:"",buttons:{A:!1,B:!1,X:!1,Y:!1,LB:!1,RB:!1,LT:!1,RT:!1,Select:!1,Start:!1,LS:!1,RS:!1,DPadUp:!1,DPadDown:!1,DPadLeft:!1,DPadRight:!1,Xbox:!1},axes:{LeftStickX:0,LeftStickY:0,RightStickX:0,RightStickY:0,RightTrigger:0,LeftTrigger:0}},w=t.useRef(k),E=t.useRef(),R=t.useRef(),L=t.useRef(0),D=t.useRef([]),[C,T]=t.useState(),[P,j]=t.useState(),A=t.useCallback((e=>{w.current=Object.assign(Object.assign({},w.current),{connected:e.connected,id:e.id,index:e.index,mapping:e.mapping,vibrationActuator:e.vibrationActuator}),E.current={[e.index]:Object.assign({},w.current)},T(w.current),j(E.current),document.dispatchEvent(new CustomEvent("gamepadupdated",{bubbles:!0,cancelable:!1,detail:{gamepad:w.current}}))}),[]);t.useEffect((()=>{D.current&&D.current.forEach(((e,t)=>{e!==a[t]&&(D.current=[]),D.current.toString()===a.toString()&&(S(),D.current=[])}))}),[D.current]);const O=t.useCallback(((e,t,n)=>{if(void 0===w.current.buttons[t])return;const{pressed:a,touched:c,value:s}=n;if(w.current.buttons[t].pressed!==a){const n={buttonIndex:e,buttonName:t,pressed:a,touched:c,value:s};document.dispatchEvent(new CustomEvent("gamepadbuttonchange",{bubbles:!0,cancelable:!1,detail:{gamepad:w.current.index,buttonDetails:n}})),d(n),a&&!w.current.buttons[t].pressed?(document.dispatchEvent(new CustomEvent("gamepadbuttondown",{bubbles:!0,cancelable:!1,detail:{gamepad:w.current.index,buttonDetails:n}})),r(n)):!a&&w.current.buttons[t].pressed&&(document.dispatchEvent(new CustomEvent("gamepadbuttonup",{bubbles:!0,cancelable:!1,detail:{gamepad:w.current.index,buttonDetails:n}})),(e=>{const{buttonName:t}=e;D.current=[...D.current,t]})(n),o(n))}w.current=Object.assign(Object.assign({},w.current),{buttons:Object.assign(Object.assign({},w.current.buttons),{[t]:n})})}),[]),X=t.useCallback(((t,n,a)=>{if(n&&null!=a&&NaN!==a){const s="-"===n[0];let u=a*(s?-1:1);if(Math.abs(u)<c&&(u=0),s&&(n=n.substr(1)),w.current.axes[n]!==u){const a=w.current.axes[n],c={axesIndex:t,axesName:n,value:u,previousValue:a};document.dispatchEvent(new CustomEvent("axeschange",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),l(c),"LeftStickX"===n&&(a<=e&&u>e&&(document.dispatchEvent(new CustomEvent("leftStickXRight",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),b(c)),a>=-e&&u<e&&(document.dispatchEvent(new CustomEvent("leftStickXLeft",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),g(c))),"LeftStickY"===n&&(a<=e&&u>e&&(document.dispatchEvent(new CustomEvent("leftStickYUp",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),m(c)),a>=-e&&u<e&&(document.dispatchEvent(new CustomEvent("leftStickYDown",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),p(c))),"RightStickX"===n&&(a<=e&&u>e&&(document.dispatchEvent(new CustomEvent("rightStickXRight",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),f(c)),a>=-e&&u<e&&(document.dispatchEvent(new CustomEvent("rightStickXLeft",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),h(c))),"RightStickY"===n&&(a<=e&&u>e&&(document.dispatchEvent(new CustomEvent("rightStickYUp",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),x(c)),a>=-e&&u<e&&(document.dispatchEvent(new CustomEvent("rightStickYDown",{bubbles:!0,detail:{gamepad:w.current.index,axes:c}})),v(c)))}w.current=Object.assign(Object.assign({},w.current),{axes:Object.assign(Object.assign({},w.current.axes),{[n]:u})})}}),[]),Y=t.useCallback((e=>{const{buttons:t}=e;for(let e=0;e<t.length;e++){const a=n.buttonIndexToName(e);O(e,a,t[e])}}),[O]),B=t.useCallback((e=>{const{axes:t}=e;for(let e=0;e<t.length;e++){const a=n.axesIndexToName(e);X(e,a,t[e])}}),[X]),N=t.useCallback((e=>{Y(e),B(e),A(e),i(E.current)}),[Y,B,A,i]),U=t.useCallback((()=>{const e=(()=>{const e=navigator.getGamepads?navigator.getGamepads():[];for(const[t,n]of Object.entries(e))!R&&n&&s(n),R&&R.current&&(null===R.current[t]&&null!==n&&s(n),null===R.current[t]||n||u(R.current[t]));return R.current=e,e})();for(let t=0;t<e.length;t++){const n=e[t];n&&N(n)}}),[N]),G=t.useCallback((e=>{const t=e.gamepad;s(t),N(e.gamepad)}),[N,s]);t.useEffect((()=>(window.addEventListener("gamepadconnected",G),window.removeEventListener("gamepadconnected",G))),[G]);const I=t.useCallback((e=>{const t=e.gamepad;w.current=Object.assign({},k),t&&delete E.current[t.index],u(t)}),[k,u]);t.useEffect((()=>(window.addEventListener("gamepaddisconnected",I),window.removeEventListener("gamepaddisconnected",I))),[I]);const y=t.useCallback((()=>{"ongamepadconnected"in window||U(),L.current=requestAnimationFrame(y)}),[U]);return t.useEffect((()=>(window&&(L.current=requestAnimationFrame(y)),()=>cancelAnimationFrame(L.current))),[y]),C},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=bundle.min.js.map
